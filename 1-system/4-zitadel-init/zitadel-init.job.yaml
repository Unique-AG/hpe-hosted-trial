apiVersion: batch/v1
kind: Job
metadata:
  name: zitadel-init-job
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  ttlSecondsAfterFinished: 86400  # Keep job for 1 day after completion
  template:
    spec:
      serviceAccountName: zitadel-init-sa
      containers:
      - name: zitadel-init
        image: python:3.9-slim
        env:
        - name: ZITADEL_DOMAIN
          value: "https://id.ingress.pcai0201.fr2.hpecolo.net"
        - name: CONFIG_PATH
          value: "/config/config.yaml"
        - name: PRIVATE_KEY_PATH
          value: "/secrets/privateKey.pem"
        - name: USER_ID
          valueFrom:
            secretKeyRef:
              name: zitadel-superuser-private-key
              key: username
        - name: DOMAIN
          value: "unique.ingress.pcai0201.fr2.hpecolo.net"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
        - bash
        - -c
        - |
          pip install pyjwt requests pyyaml cryptography kubernetes &&
          echo "Dependencies installed successfully" &&
          echo "Listing scripts directory:" &&
          ls -la /scripts &&
          echo "Content of init-zitadel.py:" &&
          head -5 /scripts/init-zitadel.py &&
          echo "Starting script execution..." &&
          python -u /scripts/init-zitadel.py
        volumeMounts:
        - name: config-volume
          mountPath: /config
        - name: secrets-volume
          mountPath: /secrets
        - name: output-volume
          mountPath: /output
        - name: script-volume
          mountPath: /scripts
      restartPolicy: OnFailure
      volumes:
      - name: config-volume
        configMap:
          name: zitadel-init-config
      - name: secrets-volume
        secret:
          secretName: zitadel-superuser-private-key
      - name: output-volume
        emptyDir: {}
      - name: script-volume
        configMap:
          name: zitadel-init-script
          defaultMode: 0755  # Make the script executable